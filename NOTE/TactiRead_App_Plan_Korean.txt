TactiRead 앱 계획서 (한국어 번역)
==================================================

택티리드 App Design & 개발 계획 1. Product Concept 택티리드 is an advanced 점자 display that allows visually impaired users to read both text and graphics in one device. Unlike most 점자 readers, which only display text, 택티리드 uses a micro-actuator grid to represent diagrams, charts, and images as tactile graphics. This feature is essential for users in STEM fields who rely on diagrams for learning and professional tasks.  Key Differentiators: - Dual Capability: Displays both text and tactile graphics. - Affordability: More cost-effective than premium models like HumanWare Monarch. - Connectivity: Integrates with an accessible mobile app for file upload and customization. - Personalization: Adjustable tactile and audio settings for enhanced independence.  The mobile app serves as the primary interface for managing files, sending them to the device, and adjusting settings. 2. Purpose of the App The app is a companion platform for the 택티리드 점자 device, not a standalone reader. Its primary objectives: - Enable users to upload content in multiple formats (PDF, PNG, JPG, DOCX). - Provide controls for 점자 dot height, tactile graphic detail, and reading speed. - Offer audio narration as an optional feature. - Simplify device pairing and management.  The app must prioritize accessibility, usability, and simplicity, incorporating voice commands, audio guidance, and large touch-friendly elements. 3. Core 기능 개요 - Onboarding & Device Pairing: Accessibility setup and quick tutorial. - 라이브러리 & 파일 Management: Upload, organize, and search documents. - Reading Control: Start/stop reading, page navigation, tactile settings, audio toggles. - Customization: Display adjustments, audio preferences, and connectivity. - Help & Support: FAQs, troubleshooting, voice-assisted support. 
4. App Structure and Navigation Flow Navigation 개요: - Bottom Navigation Bar (persistent): Home | Reading | 설정 | Help  Flow Diagram: Onboarding: [Welcome] → [Accessibility 설정] → [Device Pairing] → [튜토리얼]  Main Screens: [Home / 라이브러리]   ├── Upload 파일 → [Upload Screen] → [파일 Details]   ├── Open 파일 → [Reading / Device Control]   ├── 설정   └── Help & Support 5. Detailed Page-by-Page Wireframe Plan Onboarding: 1. Welcome Screen: App name, tagline, Sign In/Create Account, Audio Assist toggle. 2. Accessibility 설정: Voice guidance toggle, font size slider, audio preview. 3. Device Pairing: Bluetooth scan animation, list of devices, connected status. 4. 튜토리얼: Audio walkthrough, Skip/Start 튜토리얼.  Home / 라이브러리: - Greeting message, voice assist icon. - Search bar with voice input. - 문서 list view with tabs: All | Favorites | Folders. - Floating Upload Button. - Bottom Nav: Home | Reading | 설정 | Help.  Upload & 파일 Management: - Drag-and-drop upload area. - Buttons: Upload from Device | 가져오기 from Cloud. - Supported formats: PDF, PNG, DOCX. - 파일 Details: Rename, Delete, Assign to Folder, Enable Audio Narration.  Reading / Device Control: - 파일 title, device status. - Start Reading button. - Navigation: Next | Previous page. - 설정 Panel: Dot height slider, reading speed slider, graphics toggle. - Voice command tips: “Say ‘Next Page’ to continue”.  설정: - Display: Dot height, graphics detail. 
- Audio: Narration voice, speed. - Connectivity: Device pairing. - Account: Profile and logout.  Help & Support: - Search bar with voice support. - Expandable FAQ. - Contact Support: Call, Email. - Community resources section. 6. Design Components & Accessibility 가이드lines - Contrast Ratio: 4.5:1 or higher. - Minimum Font Size: 16px. - Touch Targets: 44px minimum. - Color Palette: High contrast background and text colors. - Reusable Components: Navigation bar, buttons, toggles, sliders, document cards. 7. Development Notes - Connectivity: Bluetooth pairing required. - Offline Upload: Upload files offline and sync later. - Audio 옵션: Multiple languages for narration and guidance. - 파일 Support: PDF, PNG, JPG, DOCX. 8. Deliverables for Mentor - Create a mobile app interface in Figma based on this plan. - Include wireframes for all pages and reusable UI components. 
